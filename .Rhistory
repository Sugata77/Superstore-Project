library(tidyverse) # Data Manipulation & Visualization
library(lubridate) # Date and Time Manipulation
library(ggplot2) # Visualization
library(dplyr) # Data Handling
library(readr) # Read CSV/Excel
# install.packages("forecast")
library(forecast) # Time Series Forecasting
library(tseries) # Statistical Analysis
# install.packages("caret")
library(caret) # Machine Learning Models
library(PerformanceAnalytics) # Financial Analysis
library(stringi)
library(knitr)
# install.packages("kableExtra")
library(kableExtra)
# Load Data
data <- read.csv("Superstore.csv")
getwd()
# Load Data
data <- read.csv("Superstore.csv")
# View first few rows
head(data)
# Check structure
str(data)
# Summary of all columns
summary(data)
# See total missing values in each column
colSums(is.na(data))
missing_percent <- colSums(is.na(data)) / nrow(data) * 100
print(missing_percent)
anyNA(data)
data$Order.Date <- as.Date(data$Order.Date, format = "%m/%d/%Y")
data$Ship.Date <- as.Date(data$Ship.Date, format = "%m/%d/%Y")
head(data)
# Check Structure
str(data)
head(data)
# Check duplicate rows
sum(duplicated(data))
# Clean text data by removing extra spaces in Product Name
# Identify character columns
char_cols <- sapply(data, is.character)
# Apply UTF-8 conversion to all character columns
data[char_cols] <- lapply(data[char_cols], function(x) stri_encode(x, from = "", to = "UTF-8"))
data$Product.Name <- str_trim(data$Product.Name)
head(data$Product.Name)
# # Convert categorical columns to factors
data$Category <- as.factor(data$Category)
data$Sub.Category <- as.factor(data$Sub.Category)
data$Segment <- as.factor(data$Segment)
data$Ship.Mode <- as.factor(data$Ship.Mode)
data$Region <- as.factor(data$Region)
data$State <- as.factor(data$State)
data$City <- as.factor(data$City)
head(data)
# Creating Profit Margin Column in the data
data$Profit_Margin <- ifelse(
data$Sales == 0,
NA,
(data$Profit / data$Sales) * 100
)
# View the data with new column
head(data[, c("Sales", "Profit", "Profit_Margin")])
cleaned_data <- data[, c(
"Row.ID", "Order.ID", "Order.Date", "Ship.Date", "Ship.Mode",
"Customer.ID", "Customer.Name", "Segment", "Country", "City", "State", "Postal.Code", "Region",
"Product.ID", "Category", "Sub.Category", "Product.Name",
"Sales", "Quantity", "Discount", "Profit", "Profit_Margin"
)]
# Structure of Data
str(cleaned_data)
# Summary of Data
summary(cleaned_data)
# Check Missing Values
colSums(is.na(cleaned_data))
# Export as CSV (Recommended)
write.csv(cleaned_data, "cleaned_data.csv", row.names = FALSE)
# View Unique Regions
unique(cleaned_data$Region)
# Count of Unique Regions
length(unique(cleaned_data$Region))
library(dplyr)
cleaned_data %>%
group_by(Region) %>%
summarise(Unique_Categories = n_distinct(Category))
table(cleaned_data$Region, cleaned_data$Category)
# Group by Region & Category and Calculate Total Profit
profit_summary <- cleaned_data %>%
group_by(Region, Category) %>%
summarise(Overall_Profit = sum(Profit, na.rm = TRUE)) %>%
arrange(Region, Category)
# View the result
print(profit_summary)
# Check Column Names
colnames(profit_summary)
# Clean Column Names (remove unwanted spaces)
colnames(profit_summary) <- trimws(colnames(profit_summary))
# Top 3 Profit Making (Positive Profit Only)
top3_profit <- profit_summary %>%
filter(Overall_Profit > 0) %>%
arrange(desc(Overall_Profit)) %>%
head(3)
cat("Top 3 Profit Making:\n")
print(top3_profit)
# Top 3 Loss Making (Minimum Profit)
top3_loss <- profit_summary %>%
arrange(Overall_Profit) %>%
head(3)
cat("\nTop 3 Loss Making:\n")
print(top3_loss)
# Plot
ggplot(profit_summary, aes(
x = reorder(paste(Region, Category, sep = " - "), Overall_Profit),
y = Overall_Profit, fill = Overall_Profit > 0
)) +
geom_bar(stat = "identity") +
coord_flip() +
scale_fill_manual(values = c("TRUE" = "green", "FALSE" = "red")) +
labs(
title = "Overall Profit by Region and Category",
x = "Region - Category",
y = "Overall Profit"
) +
theme_minimal()
# Top 10 Products with Minimum Profit Margin
min10_products <- cleaned_data %>%
arrange(Profit_Margin) %>% # Ascending Order
mutate(Profit_Margin = paste0(Profit_Margin, " %")) %>% # Add % Symbol
select(Product.Name, Sales, Profit, Profit_Margin) %>%
head(10)
# View Result
print(min10_products)
cleaned_data$Order.Date <- as.Date(cleaned_data$Order.Date)
cleaned_data$Month_Year <- format(cleaned_data$Order.Date, "%Y-%m")
cleaned_data$Quarter <- quarters(cleaned_data$Order.Date)
# Ensure Order.Date is Date format
cleaned_data$Order.Date <- as.Date(cleaned_data$Order.Date)
# Create Month-Year Column
cleaned_data$Month_Year <- format(cleaned_data$Order.Date, "%b-%Y") # Example: Jan-2015
# Group by Month-Year
sales_profit_monthly <- cleaned_data %>%
group_by(Month_Year) %>%
summarise(
Total_Sales = sum(Sales),
Total_Profit = sum(Profit)
) %>%
arrange(as.Date(paste0("01-", Month_Year), format = "%d-%b-%Y"))
sales_profit_monthly
# Plot with Month-Year in X-axis
ggplot(sales_profit_monthly, aes(x = factor(Month_Year, levels = Month_Year))) +
geom_line(aes(y = Total_Sales, color = "Sales", group = 1), linewidth = 1) +
geom_line(aes(y = Total_Profit, color = "Profit", group = 1), linewidth = 1) +
labs(
title = "Monthly Sales & Profit Trend",
x = "Month-Year",
y = "Amount",
color = "Legend"
) +
theme_minimal() +
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, size = 8))
# Load Libraries
library(dplyr)
library(ggplot2)
library(dplyr)
library(ggplot2)
# Convert Order Date
cleaned_data$Order.Date <- as.Date(cleaned_data$Order.Date)
# Create Quarter-Year Column
cleaned_data$Quarter_Year <- paste0(quarters(cleaned_data$Order.Date), "-", format(cleaned_data$Order.Date, "%Y"))
# Create a Helper Column for Sorting
cleaned_data$Quarter_Num <- paste0(format(cleaned_data$Order.Date, "%Y"), "-", quarters(cleaned_data$Order.Date))
# Aggregate Sales & Profit Quarterly
sales_profit_quarterly <- cleaned_data %>%
group_by(Quarter_Year, Quarter_Num) %>%
summarise(
Total_Sales = sum(Sales),
Total_Profit = sum(Profit)
) %>%
arrange(Quarter_Num)
sales_profit_quarterly
# Plot Quarterly Trend
ggplot(sales_profit_quarterly, aes(x = factor(Quarter_Year, levels = Quarter_Year))) +
geom_line(aes(y = Total_Sales, color = "Sales", group = 1), linewidth = 1) +
geom_line(aes(y = Total_Profit, color = "Profit", group = 1), linewidth = 1) +
labs(
title = "Quarterly Sales & Profit Trend",
x = "Quarter-Year",
y = "Amount",
color = "Legend"
) +
theme_minimal() +
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, size = 10))
# Create Sale_Profit_Ratio Column
# Create Sale_Profit_Ratio column with 2 decimal places
cleaned_data <- cleaned_data %>%
mutate(Sale_Profit_Ratio = ifelse(Sales == 0, 0, round(Profit / Sales, 2)))
cleaned_data
library(dplyr)
# Find 5 States with Lowest Sale_Profit_Ratio
lowest_states <- cleaned_data %>%
group_by(State) %>%
summarise(Avg_Sale_Profit_Ratio = mean(Sale_Profit_Ratio, na.rm = TRUE)) %>%
arrange(Avg_Sale_Profit_Ratio) %>%
slice_head(n = 5)
# View the result
print(lowest_states)
ggplot(lowest_states, aes(x = reorder(State, Avg_Sale_Profit_Ratio), y = Avg_Sale_Profit_Ratio)) +
geom_col(fill = "tomato") +
coord_flip() +
labs(
title = "States with Lowest Sale-Profit Ratio",
x = "State",
y = "Average Sale-Profit Ratio"
) +
theme_minimal()
# Group by City, calculate average Sale_Profit_Ratio
lowest_cities <- cleaned_data %>%
group_by(City) %>%
summarise(Avg_Sale_Profit_Ratio = mean(Sale_Profit_Ratio, na.rm = TRUE)) %>%
arrange(Avg_Sale_Profit_Ratio) %>% # Ascending order
head(5) # Bottom 5 Cities
# Display the result
print(lowest_cities)
ggplot(lowest_cities, aes(x = reorder(City, Avg_Sale_Profit_Ratio), y = Avg_Sale_Profit_Ratio)) +
geom_col(fill = "tomato") +
coord_flip() +
labs(
title = "Cities with Lowest Sale-Profit Ratio",
x = "City",
y = "Average Sale-Profit Ratio"
) +
theme_minimal()
" The bottom 5 cities — Abilene, Romeoville, Deer Park, Missouri City, Littleton — have very poor Sale_Profit_Ratio, indicating these cities are incurring heavy losses relative to sales"
" Especially Abilene with -2.7 means for every 1 unit of sales, the company is losing 2.7 units — a critical situation!"
# Heavy Discounts or Promotions	Aggressive discounting to boost sales leading to losses.
# Heavy Discounts or Promotions	Aggressive discounting to boost sales leading to losses.
# High Operational Costs	Shipping cost, warehouse cost, or delivery inefficiencies in those cities.
# Heavy Discounts or Promotions	Aggressive discounting to boost sales leading to losses.
# High Operational Costs	Shipping cost, warehouse cost, or delivery inefficiencies in those cities.
# Product Returns	Higher product return rates affecting profitability.
# Heavy Discounts or Promotions	Aggressive discounting to boost sales leading to losses.
# High Operational Costs	Shipping cost, warehouse cost, or delivery inefficiencies in those cities.
# Product Returns	Higher product return rates affecting profitability.
# Wrong Product Mix	Selling low-margin or loss-making products.
# Conduct pricing analysis specific to these cities.
# Conduct pricing analysis specific to these cities.
# Optimize or restrict discounts on non-profitable products.
# Conduct pricing analysis specific to these cities.
# Optimize or restrict discounts on non-profitable products.
# Implement minimum profit margin thresholds.
# Conduct pricing analysis specific to these cities.
# Optimize or restrict discounts on non-profitable products.
# Implement minimum profit margin thresholds.
# Optimize Logistics & Delivery Costs
# Conduct pricing analysis specific to these cities.
# Optimize or restrict discounts on non-profitable products.
# Implement minimum profit margin thresholds.
# Optimize Logistics & Delivery Costs
# Audit shipping costs for these cities.
# Conduct pricing analysis specific to these cities.
# Optimize or restrict discounts on non-profitable products.
# Implement minimum profit margin thresholds.
# Optimize Logistics & Delivery Costs
# Audit shipping costs for these cities.
# Explore cheaper logistics partners.
# Conduct pricing analysis specific to these cities.
# Optimize or restrict discounts on non-profitable products.
# Implement minimum profit margin thresholds.
# Optimize Logistics & Delivery Costs
# Audit shipping costs for these cities.
# Explore cheaper logistics partners.
# Consider regional warehouses for cost efficiency.
# Conduct pricing analysis specific to these cities.
# Optimize or restrict discounts on non-profitable products.
# Implement minimum profit margin thresholds.
# Optimize Logistics & Delivery Costs
# Audit shipping costs for these cities.
# Explore cheaper logistics partners.
# Consider regional warehouses for cost efficiency.
# Analyze which product categories are dragging down profits.
# Conduct pricing analysis specific to these cities.
# Optimize or restrict discounts on non-profitable products.
# Implement minimum profit margin thresholds.
# Optimize Logistics & Delivery Costs
# Audit shipping costs for these cities.
# Explore cheaper logistics partners.
# Consider regional warehouses for cost efficiency.
# Analyze which product categories are dragging down profits.
# Focus on promoting high-margin products.
# Conduct pricing analysis specific to these cities.
# Optimize or restrict discounts on non-profitable products.
# Implement minimum profit margin thresholds.
# Optimize Logistics & Delivery Costs
# Audit shipping costs for these cities.
# Explore cheaper logistics partners.
# Consider regional warehouses for cost efficiency.
# Analyze which product categories are dragging down profits.
# Focus on promoting high-margin products.
# Consider discontinuing consistently loss-making products.
# Optimize or restrict discounts on non-profitable products.
# Implement minimum profit margin thresholds.
# Optimize Logistics & Delivery Costs
# Audit shipping costs for these cities.
# Explore cheaper logistics partners.
# Consider regional warehouses for cost efficiency.
# Analyze which product categories are dragging down profits.
# Focus on promoting high-margin products.
# Consider discontinuing consistently loss-making products.
# Identify high-value customer segments in these cities.
# Implement minimum profit margin thresholds.
# Optimize Logistics & Delivery Costs
# Audit shipping costs for these cities.
# Explore cheaper logistics partners.
# Consider regional warehouses for cost efficiency.
# Analyze which product categories are dragging down profits.
# Focus on promoting high-margin products.
# Consider discontinuing consistently loss-making products.
# Identify high-value customer segments in these cities.
# Targeted loyalty programs or exclusive deals for profitable segments.
# Optimize Logistics & Delivery Costs
# Audit shipping costs for these cities.
# Explore cheaper logistics partners.
# Consider regional warehouses for cost efficiency.
# Analyze which product categories are dragging down profits.
# Focus on promoting high-margin products.
# Consider discontinuing consistently loss-making products.
# Identify high-value customer segments in these cities.
# Targeted loyalty programs or exclusive deals for profitable segments.
# Personalized marketing instead of mass discounts.
# Audit shipping costs for these cities.
# Explore cheaper logistics partners.
# Consider regional warehouses for cost efficiency.
# Analyze which product categories are dragging down profits.
# Focus on promoting high-margin products.
# Consider discontinuing consistently loss-making products.
# Identify high-value customer segments in these cities.
# Targeted loyalty programs or exclusive deals for profitable segments.
# Personalized marketing instead of mass discounts.
# Investigate operational bottlenecks.
# Explore cheaper logistics partners.
# Consider regional warehouses for cost efficiency.
# Analyze which product categories are dragging down profits.
# Focus on promoting high-margin products.
# Consider discontinuing consistently loss-making products.
# Identify high-value customer segments in these cities.
# Targeted loyalty programs or exclusive deals for profitable segments.
# Personalized marketing instead of mass discounts.
# Investigate operational bottlenecks.
# Streamline supply chain for these regions.
